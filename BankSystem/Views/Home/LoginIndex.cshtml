@model Bank.BAL.AccountModel


@if (Request.IsAuthenticated)
{
    <button type="button" class="btn navbar-btn">@Html.ActionLink("Home", "Index", "Home")</button>
    <button type="button" class="btn navbar-btn">@Html.ActionLink("Back", "GetDetailsOfAccount", "Home")</button>

    using (Html.BeginForm("LoginIndex", "Home", FormMethod.Post))

    {
        <br />
        @*<span>Welcome @Html.Encode(User.Identity.Name) </span> <br /><br /><br />*@
        <span><b>Select User::&nbsp;&nbsp;&nbsp;</b></span>@Html.DropDownListFor(model => model.UserId, new SelectList(Model.UserList, "UserId", "FirstName"), "Select User Name")
        <br />
        <br />
        <span><b>Select Branch Name::&nbsp;&nbsp;&nbsp;</b></span>@Html.DropDownListFor(model => model.BranchId, new SelectList(Model.BranchList, "BranchId", "BranchName"), "Select Branch Name")
        <br />
        <br />
        {
            @*<div class="form-group">
                    @Html.LabelFor(model => model.BranchName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.BranchName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BranchName, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.AccountNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AccountNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AccountNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.MinimumBalance, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MinimumBalance, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MinimumBalance, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.WithdrwaLimit, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.WithdrwaLimit, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.WithdrwaLimit, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.AccountBalance, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AccountBalance, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AccountBalance, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <br />
        }
        <input type="submit" value="AddBank" />
    }
}





